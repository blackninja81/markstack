name: Deploy to cPanel via File Upload

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies and build project
        run: |
          npm install
          npm run build

      - name: Install zip and create deployment package
        run: |
          sudo apt-get update && sudo apt-get install -y zip
          
          BUILD_DIR="$GITHUB_WORKSPACE/dist"
          if [ ! -d "$BUILD_DIR" ]; then
            echo "Error: Build directory $BUILD_DIR does not exist."
            exit 1
          fi

          timestamp=$(date +%s)
          DEPLOY_ZIP="$GITHUB_WORKSPACE/deploy_${timestamp}.zip"
          echo "DEPLOY_ZIP=$DEPLOY_ZIP" >> $GITHUB_ENV
          
          cd "$BUILD_DIR" && zip -r "$DEPLOY_ZIP" . && cd "$GITHUB_WORKSPACE"
          echo "Zip file created at: $DEPLOY_ZIP"
          ls -la "$DEPLOY_ZIP"  # Confirm zip creation

      - name: Upload and deploy to cPanel
        env:
          CPANEL_USERNAME: ${{ secrets.CPANEL_USERNAME }}
          CPANEL_API_TOKEN: ${{ secrets.CPANEL_API_TOKEN }}
          CPANEL_DOMAIN: ${{ secrets.CPANEL_DOMAIN }}
        run: |
          echo "Using CPANEL_DOMAIN: $CPANEL_DOMAIN"

          if [ ! -f "$DEPLOY_ZIP" ]; then
            echo "Error: Zip file $DEPLOY_ZIP not found."
            exit 1
          fi

          # Upload the zip file
          curl -H "Authorization: cpanel ${CPANEL_USERNAME}:${CPANEL_API_TOKEN}" \
               -F "dir=/public_html" \
               -F "file=@$DEPLOY_ZIP" \
               "https://${{ secrets.CPANEL_DOMAIN }}:2083/execute/Fileman/upload_files"

          if [ $? -eq 0 ]; then
            echo "Upload successful"
          else
            echo "Upload failed"
            exit 1
          fi

          # Extract with overwrite
          curl -H "Authorization: cpanel ${CPANEL_USERNAME}:${CPANEL_API_TOKEN}" \
               -d "dir=/public_html" \
               -d "file=$(basename $DEPLOY_ZIP)" \
               -d "overwrite=1" \
               "https://${{ secrets.CPANEL_DOMAIN }}:2083/execute/Fileman/extract_files"

          # Cleanup deployment zip
          curl -H "Authorization: cpanel ${CPANEL_USERNAME}:${CPANEL_API_TOKEN}" \
               -d "dir=/public_html" \
               -d "file=$(basename $DEPLOY_ZIP)" \
               "https://${{ secrets.CPANEL_DOMAIN }}:2083/execute/Fileman/delete_file"

      - name: Verify deployment
        if: success()
        run: |
          echo "Deployment completed successfully"
          echo "Timestamp: $(date)"

      - name: Handle failure
        if: failure()
        run: |
          echo "Deployment failed"
          echo "Contents of current directory:"
          ls -la
