name: Deploy to cPanel via FTP

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create deployment package
        run: |
          timestamp=$(date +%s)
          DEPLOY_ZIP="deploy_${timestamp}.zip"
          echo "DEPLOY_ZIP=$DEPLOY_ZIP" >> $GITHUB_ENV
          cd dist && zip -r "$GITHUB_WORKSPACE/$DEPLOY_ZIP" . && cd ..
          echo "Created zip file: $GITHUB_WORKSPACE/$DEPLOY_ZIP"
          ls -la "$GITHUB_WORKSPACE"  # Verify zip file creation

      - name: Upload ZIP via FTP
        env:
          FTP_SERVER: ftp.johnkaburu.co.ke
          FTP_USERNAME: "johnkaburu@johnkaburu.co.ke"
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}  # Ensure FTP password is stored in GitHub Secrets
          FTP_TARGET_DIR: /bookmark.johnkaburu.co.ke  # Adjust to your FTP target directory
        run: |
          echo "Uploading to FTP server $FTP_SERVER"
          curl -T "$GITHUB_WORKSPACE/$DEPLOY_ZIP" \
               --ftp-create-dirs \
               --user "${FTP_USERNAME}:${FTP_PASSWORD}" \
               "ftp://$FTP_SERVER$FTP_TARGET_DIR/$(basename $DEPLOY_ZIP)"

      - name: Upload extraction PHP script via FTP
        run: |
          PHP_SCRIPT="extract.php"
          cat > $PHP_SCRIPT << 'EOF'
          <?php
          error_reporting(E_ALL);
          ini_set('display_errors', 1);

          function deleteDirectory($dir) {
              if (!is_dir($dir)) return;
              $files = array_diff(scandir($dir), array('.', '..'));
              foreach ($files as $file) {
                  $filePath = "$dir/$file";
                  is_dir($filePath) ? deleteDirectory($filePath) : unlink($filePath);
              }
              rmdir($dir);
          }

          $zipFile = __DIR__ . '/' . basename('$DEPLOY_ZIP');
          $extractTo = __DIR__;

          deleteDirectory($extractTo); // Clean up old files

          if (file_exists($zipFile)) {
              $zip = new ZipArchive;
              if ($zip->open($zipFile) === TRUE) {
                  $zip->extractTo($extractTo);
                  $zip->close();
                  echo 'Extraction successful.';
              } else {
                  echo 'Failed to open the ZIP file.';
              }
          } else {
              echo 'Zip file does not exist.';
          }
          unlink($zipFile);
          ?>
          EOF

          curl -T "$PHP_SCRIPT" \
               --user "${FTP_USERNAME}:${FTP_PASSWORD}" \
               "ftp://$FTP_SERVER$FTP_TARGET_DIR/$(basename $PHP_SCRIPT)"

      - name: Run extraction script
        env:
          FTP_DOMAIN: "bookmark.johnkaburu.co.ke"  # Update to the correct domain or subdomain
        run: |
          EXECUTE_URL="https://$FTP_DOMAIN/extract.php"  # Ensure that this URL points to the correct location of extract.php
          echo "Executing extraction script at $EXECUTE_URL"
          curl -s "$EXECUTE_URL"

      - name: Verify deployment
        if: success()
        run: |
          echo "Deployment completed successfully"
          echo "Timestamp: $(date)"

      - name: Handle failure
        if: failure()
        run: |
          echo "Deployment failed"
