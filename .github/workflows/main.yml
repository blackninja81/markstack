name: Deploy to cPanel via File Upload

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies and build project
        run: |
          npm install
          npm run build

      # Creating zip from the build directory
      - name: Create deployment package
        run: |
          timestamp=$(date +%s)
          DEPLOY_ZIP="deploy_${timestamp}.zip"
          echo "DEPLOY_ZIP=$DEPLOY_ZIP" >> $GITHUB_ENV
          cd build && zip -r "../$DEPLOY_ZIP" . && cd ..
          ls -la  # Debug: list files to verify zip creation

      - name: Upload and deploy to cPanel
        env:
          CPANEL_USERNAME: ${{ secrets.CPANEL_USERNAME }}
          CPANEL_API_TOKEN: ${{ secrets.CPANEL_API_TOKEN }}
          CPANEL_DOMAIN: ${{ secrets.CPANEL_DOMAIN }}
        run: |
          # Check if the zip file exists
          echo "Checking for zip file: $DEPLOY_ZIP"
          ls -la "$DEPLOY_ZIP"
          
          # Upload file to cPanel
          curl -H "Authorization: cpanel ${CPANEL_USERNAME}:${CPANEL_API_TOKEN}" \
               -F "dir=/public_html" \
               -F "file=@$DEPLOY_ZIP" \
               "https://${CPANEL_DOMAIN}:2083/execute/Fileman/upload_files"

          if [ $? -eq 0 ]; then
            echo "Upload successful"
          else
            echo "Upload failed"
            exit 1
          fi

          # Extract with overwrite
          curl -H "Authorization: cpanel ${CPANEL_USERNAME}:${CPANEL_API_TOKEN}" \
               -d "dir=/public_html" \
               -d "file=$DEPLOY_ZIP" \
               -d "overwrite=1" \
               "https://${CPANEL_DOMAIN}:2083/execute/Fileman/extract_files"

          # Cleanup deployment zip
          curl -H "Authorization: cpanel ${CPANEL_USERNAME}:${CPANEL_API_TOKEN}" \
               -d "dir=/public_html" \
               -d "file=$DEPLOY_ZIP" \
               "https://${CPANEL_DOMAIN}:2083/execute/Fileman/delete_file"

      - name: Verify deployment
        if: success()
        run: |
          echo "Deployment completed successfully"
          echo "Timestamp: $(date)"

      - name: Handle failure
        if: failure()
        run: |
          echo "Deployment failed"
          echo "Contents of current directory:"
          ls -la
