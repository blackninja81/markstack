name: Deploy to cPanel via cPanel API
on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Create deployment package
        run: |
          timestamp=$(date +%s)
          DEPLOY_ZIP="deploy_${timestamp}.zip"
          echo "DEPLOY_ZIP=$DEPLOY_ZIP" >> $GITHUB_ENV
          cd dist && zip -r "$GITHUB_WORKSPACE/$DEPLOY_ZIP" . && cd ..
          echo "Created zip file: $GITHUB_WORKSPACE/$DEPLOY_ZIP"
          ls -la "$GITHUB_WORKSPACE"

      - name: Upload ZIP to cPanel
        env:
          CPANEL_USERNAME: ${{ secrets.CPANEL_USERNAME }}
          CPANEL_API_TOKEN: ${{ secrets.CPANEL_API_TOKEN }}
          CPANEL_DOMAIN: ${{ secrets.CPANEL_DOMAIN }}
          CPANEL_EXTRACT_DIR: /bookmark.johnkaburu.co.ke
        run: |
          echo "Using CPANEL_DOMAIN: $CPANEL_DOMAIN"
          echo "Uploading to CPANEL_EXTRACT_DIR: $CPANEL_EXTRACT_DIR"

          if [ ! -f "$GITHUB_WORKSPACE/$DEPLOY_ZIP" ]; then
            echo "Error: Zip file $DEPLOY_ZIP not found."
            exit 1
          fi
          
          UPLOAD_URL="https://$CPANEL_DOMAIN:2083/execute/Fileman/upload_files"
          UPLOAD_RESPONSE=$(curl -H "Authorization: cpanel ${CPANEL_USERNAME}:${CPANEL_API_TOKEN}" \
               -F "dir=$CPANEL_EXTRACT_DIR" \
               -F "file=@$GITHUB_WORKSPACE/$DEPLOY_ZIP" \
               "$UPLOAD_URL")

          echo "Upload Response: $UPLOAD_RESPONSE"

          # Construct full path to ZIP file
          ZIP_FILE_PATH="$CPANEL_EXTRACT_DIR/$(basename $DEPLOY_ZIP)"
          echo "Checking for ZIP file at: $ZIP_FILE_PATH"
          MAX_TRIES=10
          SLEEP_DURATION=2

          # Check if ZIP file exists on server after upload
          for (( i=0; i<$MAX_TRIES; i++ )); do
            FILE_CHECK=$(curl -s -H "Authorization: cpanel ${CPANEL_USERNAME}:${CPANEL_API_TOKEN}" \
              -d "file=$ZIP_FILE_PATH" \
              "https://$CPANEL_DOMAIN:2083/execute/Fileman/file_exists")

            if [[ $FILE_CHECK == *'"result":1'* ]]; then
              echo "ZIP file found: $ZIP_FILE_PATH"
              break
            else
              echo "ZIP file not found, retrying... ($((i+1))/$MAX_TRIES)"
              sleep $SLEEP_DURATION
            fi
          done

          if [[ $FILE_CHECK != *'"result":1'* ]]; then
            echo "Error: ZIP file does not exist after upload."
            exit 1
          fi

          PHP_SCRIPT="extract.php"
          echo "Creating PHP script to extract ZIP file"
          echo "<?php
          error_reporting(E_ALL);
          ini_set('display_errors', 1);

          \$zipFile = '$ZIP_FILE_PATH';
          \$extractTo = '$CPANEL_EXTRACT_DIR';
          \$logFile = 'debug_log.txt';
          file_put_contents(\$logFile, 'Attempting to extract: ' . \$zipFile . PHP_EOL, FILE_APPEND);

          if (file_exists(\$zipFile)) {
              \$zip = new ZipArchive;
              if (\$zip->open(\$zipFile) === TRUE) {
                  \$zip->extractTo(\$extractTo);
                  \$zip->close();
                  file_put_contents(\$logFile, 'Extraction successful.' . PHP_EOL, FILE_APPEND);
                  echo 'Extraction successful.';
              } else {
                  file_put_contents(\$logFile, 'Failed to open the ZIP file.' . PHP_EOL, FILE_APPEND);
                  echo 'Failed to open the ZIP file.';
              }
          } else {
              file_put_contents(\$logFile, 'Zip file does not exist: ' . \$zipFile . PHP_EOL, FILE_APPEND);
              echo 'Zip file does not exist. Please ensure the file was uploaded successfully.';
          }
          ?>" > $PHP_SCRIPT

          curl -H "Authorization: cpanel ${CPANEL_USERNAME}:${CPANEL_API_TOKEN}" \
               -F "dir=$CPANEL_EXTRACT_DIR" \
               -F "file=@$PHP_SCRIPT" \
               "$UPLOAD_URL"

          EXECUTE_URL="https://$CPANEL_DOMAIN/extract.php"
          EXECUTE_RESPONSE=$(curl -s "$EXECUTE_URL")
          echo "PHP Execution Response: $EXECUTE_RESPONSE"

          CLEANUP_URL="https://$CPANEL_DOMAIN:2083/execute/Fileman/delete_file"
          curl -H "Authorization: cpanel ${CPANEL_USERNAME}:${CPANEL_API_TOKEN}" \
               -d "dir=$CPANEL_EXTRACT_DIR" \
               -d "file=$(basename $DEPLOY_ZIP)" \
               "$CLEANUP_URL" || { echo "Cleanup of ZIP file failed"; exit 1; }
          
          curl -H "Authorization: cpanel ${CPANEL_USERNAME}:${CPANEL_API_TOKEN}" \
               -d "dir=$CPANEL_EXTRACT_DIR" \
               -d "file=$PHP_SCRIPT" \
               "$CLEANUP_URL" || { echo "Cleanup of PHP script failed"; exit 1; }

      - name: Verify deployment
        if: success()
        run: |
          echo "Deployment completed successfully"
          echo "Timestamp: $(date)"

      - name: Handle failure
        if: failure()
        run: |
          echo "Deployment failed"
          echo "Contents of current directory:"
          ls -la
